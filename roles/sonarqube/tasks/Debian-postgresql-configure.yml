---
- name: Touch repo file
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/pgdg.list
    state: touch
    mode: '0644'
    owner: root
    group: root

- name: template specified repository into sources list
  ansible.builtin.template:
    src: "postgresql-repo-list.j2"
    dest: /etc/apt/sources.list.d/pgdg.list

  # ansible.builtin.apt_repository:
  #   repo: deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main
  #   state: present
  #   filename: /etc/apt/sources.list.d/pgdg.list

# - name: Download the PostgreSQL software
#   get_url:
#     url: https://www.postgresql.org/media/keys/ACCC4CF8.asc 
#     dest: public-key
#     mode: '0440'

- name: Add an Apt signing key, uses whichever key is at the URL
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc 
    state: present

- name: install postgresql db server and neccessary packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - postgresql 
    - postgresql-contrib
    - python-setuptools
    - python3-pip
    - libpq-dev 
    - python-dev
  
- name: Creating user postgres without admin access
  user:
    name: "{{ postgres_username }}"
    password: "{{ linux_postgres_password | password_hash('sha512') }}"
  when: assigned_role == "no"


- name: start and enable postgresql
  service:
    name: postgresql
    state: started
    enabled: yes

# install pip2 here
  
- name: Make sure psycopg2 is installed (subsequent step requires it)
  pip:
    name: psycopg2
    state: present

- name: Create a new database with name "sonarqube"
  community.postgresql.postgresql_db:
    # become_user: postgres
    name: sonarqube

- name: Create postgres user
  become_user: postgres
  postgresql_user:
    name: sonar
    password: sonar
    encrypted: yes

- name: GRANT ALL PRIVILEGES ON sonarqube db to sonar
  become_user: postgres
  community.postgresql.postgresql_privs:
    db: sonarqube
    privs: ALL
    type: schema
    objs: ALL_IN_SCHEMA
    role: sonar


